<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://edwin1122.github.io/</id><title>Edwin Here</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2023-03-04T16:45:05+08:00</updated> <author> <name>Edwin</name> <uri>https://edwin1122.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://edwin1122.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en-US" href="https://edwin1122.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2023 Edwin </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Anroid Binder机制</title><link href="https://edwin1122.github.io/posts/Android-Binder/" rel="alternate" type="text/html" title="Anroid Binder机制" /><published>2021-03-17T10:50:43+08:00</published> <updated>2021-03-18T09:37:45+08:00</updated> <id>https://edwin1122.github.io/posts/Android-Binder/</id> <content src="https://edwin1122.github.io/posts/Android-Binder/" /> <author> <name>Edwin</name> </author> <category term="Android" /> <summary> 一. 前言 Android 的 Binder 机制, 是作为 Android 进阶学习中一个必学的知识点。 之前, 通过学习 《Android 开发艺术探索》以及 网上的一些博客, 大致了解 Android Binder 机制的过程, 自以为已掌握 Binder 机制的大致过程, 写下博客 Android—-IPC机制（Binder） , 但是实际上只是了解了皮毛，没有深入整个流程，于是重新学习，将新的体会记录成这篇 进阶篇。 阅读这篇文章之前需要具备基本的 Binder 机制的流程, 具体可通过这些博客学习 Android—-IPC机制（Binder） Binder学习指南 图文详解 Android Binder跨进程通信的原理 手动实现 Binder 的通信, 不依靠 AIDL 自动生成。 二. 跨进程 (一). 用户空间/内核空间 内核空间是 Linux 系统... </summary> </entry> <entry><title>How to align images in markdown</title><link href="https://edwin1122.github.io/posts/Markdown-align-center/" rel="alternate" type="text/html" title="How to align images in markdown" /><published>2021-03-11T15:11:41+08:00</published> <updated>2021-03-11T15:11:41+08:00</updated> <id>https://edwin1122.github.io/posts/Markdown-align-center/</id> <content src="https://edwin1122.github.io/posts/Markdown-align-center/" /> <author> <name>Edwin</name> </author> <category term="Blogging" /> <category term="Tutorial" /> <summary> Image alignment in markdown Normal markdown image tags don’t allow for any alignment properties and thats a bummer when you are trying to make your README.md file pretty on github. &amp;lt;!-- No alignment options --&amp;gt; ![GitHub Logo](/images/logo.png) Luckily, we can use html image tags to make enhance our docs. &amp;lt;!-- Alignment options!!!!! --&amp;gt; &amp;lt;img align="left" width="100" height="... </summary> </entry> <entry><title>Enable Google Page Views</title><link href="https://edwin1122.github.io/posts/enable-google-pv/" rel="alternate" type="text/html" title="Enable Google Page Views" /><published>2021-01-04T07:32:00+08:00</published> <updated>2021-03-10T15:51:16+08:00</updated> <id>https://edwin1122.github.io/posts/enable-google-pv/</id> <content src="https://edwin1122.github.io/posts/enable-google-pv/" /> <author> <name>Edwin</name> </author> <category term="Blogging" /> <category term="Tutorial" /> <summary> This post is to enable Page Views on the Chirpy theme based blog that you just built. This requires technical knowledge and it’s recommended to keep the google_analytics.pv disabled unless you have a good reason. If your website has low traffic, the page views count would discourage you to write more blogs. With that said, let’s start with the setup. Set up Google Analytics Create GA account ... </summary> </entry> <entry><title>Java constructor VS method</title><link href="https://edwin1122.github.io/posts/constructor-vs-method/" rel="alternate" type="text/html" title="Java constructor VS method" /><published>2020-03-14T19:52:00+08:00</published> <updated>2021-03-14T20:55:16+08:00</updated> <id>https://edwin1122.github.io/posts/constructor-vs-method/</id> <content src="https://edwin1122.github.io/posts/constructor-vs-method/" /> <author> <name>Edwin</name> </author> <category term="Java" /> <summary> 构造函数（构造器）是一种特殊的函数。其主要功能是用来在创建对象时初始化对象， 即为对象成员变量赋初始值，总与new运算符一起使用在创建对象的语句中。构造函数与类名相同，可重载多个不同的构造函数。在JAVA语言中，构造函数与C++语言中的构造函数相同，JAVA语言中普遍称之为构造方法。 构造器特性： 如果我们的类当中没有定义任何构造器，系统会给我们默认提供一个无参的构造器。 如果我们的类当中定义了构造器，那么系统就不会再给我们提供默认的无参构造器。 作用：构建创造一个对象。同时可以给我们的属性做一个初始化操作。 下面主要学习构造器和方法的区别： 我们说构造器是一种方法，就象讲澳大利亚的鸭嘴兽是一种哺育动物。（按：老外喜欢打比喻，我也就照着翻译）。要理解鸭嘴兽，那么先必须理解它和其他哺育动物的区别。同样地，要理解构造器，那么就要了解构造器和方法的区别。所有学习jav... </summary> </entry> <entry><title>疑似工厂模式</title><link href="https://edwin1122.github.io/posts/design-pattern/" rel="alternate" type="text/html" title="疑似工厂模式" /><published>2020-03-14T09:58:00+08:00</published> <updated>2020-03-14T09:58:00+08:00</updated> <id>https://edwin1122.github.io/posts/design-pattern/</id> <content src="https://edwin1122.github.io/posts/design-pattern/" /> <author> <name>Edwin</name> </author> <category term="Design Pattern" /> <summary> 在«第一行代码» serveiceBestPractice demo中发现一种写法，感觉很像工厂模式， 贴到这里记录一下。 DownloadListener定义接口如下： package com.example.servicebestpractice; public interface DownloadListener { void onProgress(int progress); void onSuccess(); void onFailed(); void onPaused(); void onCanceled(); } 在DownloadTask中调用接口listener相应方法: @Override protected void onPostExecute(Integer stat... </summary> </entry> </feed>
